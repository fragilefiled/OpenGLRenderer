#version 450 core
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D height_out_tex;


#define PI 3.14159274f
#define G 9.81f
uniform int N=0;
uniform vec3 limit;
vec2 complexMultiply(vec2 c1, vec2 c2)
{
    return vec2(c1.x * c2.x - c1.y * c2.y,
    c1.x * c2.y + c1.y * c2.x);
}
void main() {

  // get index in global work group i.e x,y position
  ivec2 id = ivec2(gl_GlobalInvocationID.xy);
    vec2 height =imageLoad(height_in_tex,id).xy;
      imageStore(height_out_tex,id.xy, vec4(0,0, 0, 0));
  //
  // interesting stuff happens here later
  //
  
  // result to a specific pixel in the image
  
}