#version 450 core
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D x_out_tex;
layout(rgba32f, binding = 1) uniform image2D y_out_tex;
layout(rgba32f, binding = 2) uniform image2D height_out_tex;
layout(rgba32f, binding = 3) uniform image2D xyz_out_tex;
layout(rgba32f, binding = 4) uniform image2D x_in_tex;
layout(rgba32f, binding = 5) uniform image2D y_in_tex;
layout(rgba32f, binding = 6) uniform image2D height_in_tex;

#define PI 3.14159274f
#define G 9.81f
uniform int N=0;
uniform vec3 limit;
vec2 complexMultiply(vec2 c1, vec2 c2)
{
    return vec2(c1.x * c2.x - c1.y * c2.y,
    c1.x * c2.y + c1.y * c2.x);
}
void main() {

  // get index in global work group i.e x,y position
  ivec2 id = ivec2(gl_GlobalInvocationID.xy);
   float x=length(imageLoad(x_in_tex,id))*limit.x/(N*N);
   float y=length(imageLoad(y_in_tex,id))*limit.y/(N*N);
   float z=length(imageLoad(height_in_tex,id))*limit.z/(N*N);

   imageStore(height_out_tex,id.xy, vec4(z,z, z, 0));
     imageStore(x_out_tex,id.xy, vec4(x,x, x, 0));
       imageStore(y_out_tex,id.xy, vec4(y,y, y, 0));
       imageStore(xyz_out_tex,id.xy, vec4(x,z, y, 0));
  //
  // interesting stuff happens here later
  //
  
  // result to a specific pixel in the image
  
}