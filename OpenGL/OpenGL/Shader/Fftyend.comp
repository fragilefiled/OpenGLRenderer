#version 450 core
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D x_out_tex;
layout(rgba32f, binding = 1) uniform image2D y_out_tex;
layout(rgba32f, binding = 2) uniform image2D height_out_tex;
layout(rgba32f, binding = 3) uniform image2D x_in_tex;
layout(rgba32f, binding = 4) uniform image2D y_in_tex;
layout(rgba32f, binding = 5) uniform image2D height_in_tex;
#define PI 3.14159274f
#define G 9.81f
uniform int Ns;
uniform int N=0;
vec2 complexMultiply(vec2 c1, vec2 c2)
{
    return vec2(c1.x * c2.x - c1.y * c2.y,
    c1.x * c2.y + c1.y * c2.x);
}
void main() {

  // get index in global work group i.e x,y position
  ivec2 id = ivec2(gl_GlobalInvocationID.xy);
  ivec2 idxs=id;
  idxs.y = int(floor(id.y / (Ns * 2.0f)) * Ns + id.y % Ns);
    float angle = 2.0f * PI * (id.y / (Ns * 2.0f));
    vec2 w = vec2(cos(angle), sin(angle));
    w *= -1;
     int x=int(id.y-float(N * 0.5f));
    vec2 x0 = imageLoad(x_in_tex,idxs).xy;
    vec2 x1 = imageLoad(x_in_tex,ivec2(idxs.x , idxs.y+ N * 0.5f)).xy;

    vec2 result = x0 + complexMultiply(w,x1);
    result *= (mod((x + 1),2.0f)) * 1 + mod(x , 2.0f) * (-1);
    imageStore(x_out_tex,id.xy, vec4(result, 0, 0));

    x0 = imageLoad(y_in_tex,idxs).xy;
    x1 = imageLoad(y_in_tex,ivec2(idxs.x , idxs.y+ N * 0.5f)).xy;

    result = x0 + complexMultiply(w,x1);
   result *= (mod((x + 1),2.0f)) * 1 + mod(x , 2.0f) * (-1);
    imageStore(y_out_tex,id.xy, vec4(result, 0, 0));

     x0 = imageLoad(height_in_tex,idxs).xy;
     x1 = imageLoad(height_in_tex,ivec2(idxs.x , idxs.y+ N * 0.5f)).xy;

     result = x0 + complexMultiply(w,x1);
    result *= (mod((x + 1),2.0f)) * 1 + mod(x , 2.0f) * (-1);
    imageStore(height_out_tex,id.xy, vec4(result, 0, 0));
  
  //
  // interesting stuff happens here later
  //
  
  // result to a specific pixel in the image
  
}