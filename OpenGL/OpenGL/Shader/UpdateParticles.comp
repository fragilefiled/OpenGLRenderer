#version 450 core
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D partilces_in_tex;
layout(rgba32f, binding = 1) uniform image2D partilces_in_tex1;
#define PI 3.14159274f
#define G 9.81f
uniform float N;
uniform int Input_N=0;
uniform vec3 limit;
uniform float Scale=0.0f;
uniform float bound_radius;
vec2 complexMultiply(vec2 c1, vec2 c2)
{
    return vec2(c1.x * c2.x - c1.y * c2.y,
    c1.x * c2.y + c1.y * c2.x);
}
void main() 
{

  // get index in global work group i.e x,y position
    ivec2 id = ivec2(gl_GlobalInvocationID.xy);
   
    vec4 particle_info_0 =imageLoad(partilces_in_tex,id).xyzw;
    vec4 particle_info_1 =imageLoad(partilces_in_tex1,id).xyzw;
    vec2 pos=particle_info_0.xy;
    float a0=particle_info_0.z;
    float r=particle_info_0.w;
    vec2 dir=(imageLoad(partilces_in_tex1,id).xy);

  
    
    if(pos.x>=N-2*bound_radius){
        dir.x*=-1;
        pos.x=N-2*bound_radius;
    }
    if(pos.y>=N-2*bound_radius){
        dir.y*=-1;
        pos.y=N-2*bound_radius;
    }
    if(pos.y<=2*bound_radius){
        dir.y=abs(dir.y);
        pos.y=2*bound_radius;
    }
    if(pos.x<=2*bound_radius){
        dir.x=abs(dir.x);
        pos.x=2*bound_radius;
    }
       pos+=0.1f*0.3333f*dir;
    
    imageStore(partilces_in_tex,id.xy,vec4(pos,a0,r));
    imageStore(partilces_in_tex1,id.xy,vec4(dir,0.0,0.0));
    // imageStore(partilces_in_tex,id.xy,vec4(20,20,20,20));
    //  imageStore(partilces_in_tex1,id.xy,vec4(20,0.0,0.0,0.0));
  //
  // interesting stuff happens here later
  //
  
  // result to a specific pixel in the image
  
}